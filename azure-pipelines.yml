# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables: 
  - group: Git-Push

steps:

- task: DotNetCoreCLI@2
  displayName: 'Restore NuGet Packages'
  inputs:
    command: 'restore'
    feedsToUse: 'select'
    vstsFeed: '644f502f-3851-40c7-b691-0456e0bed428'

- task: DotNetCoreCLI@2
  displayName: 'Build Projects'
  inputs:
    command: 'build'

- task: DotNetCoreCLI@2
  displayName: 'Run Tests with Code Coverage'
  inputs:
    command: 'test'
    projects: '**/*.Tests.csproj'
    arguments: '--collect "Code coverage"'

- task: DotNetCoreCLI@2
  displayName: 'Pack NuGet Packages'
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj;!**/*.Tests.csproj'
    nobuild: true
    includesymbols: true
    includesource: true
    versioningScheme: 'off'

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '644f502f-3851-40c7-b691-0456e0bed428'
    allowPackageConflicts: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'NuGet Packages'
    publishLocation: 'Container'

- task: mirror-git-repository-vsts-task@1
  inputs:
    sourceGitRepositoryUri: '$(Build.Repository.Uri)'
    sourceGitRepositoryPersonalAccessToken: '$(StartitectureRepoPAT)'
    destinationGitRepositoryUri: 'https://github.com/Startitecture/Core.git'
    destinationGitRepositoryPersonalAccessToken: '$(GithubPAT-Mirror)'